
// Файл music_store - BD sqlite 

// -----------------------------------------------------
упрощения:
1. Все музыканты принадлежат какой-то группе. Музыкант может принадлежать только 1й группе.
2. У музыканта может быть несколько ролей в группе (напр. руководитель и клавишник).
3. Автором произведения может быть только группа.
4. На диске могут быть записаны несколько групп.

// -----------------------------------------------------

Таблицы:
artist - список музыкантов с принадлежностью к группам
artist_role - роль (обязанности) музыканта в группе
art_band_role - связь много ко многим - роль артиста в группе (может быть несколько)  
band - ансамбль с наименованием и типом
band_type - типы ансамблей с описанием
company - компании с адресами и статусом (производитель/продавец)
singles - композиции (произведения) с указанием автора (ссылка на группу)  
album_matrix - матрица для печати пластинок с уникальным номером, компанией и названием пластинки
album - экземпляр пластинки с номерами матрицы, произведения и исполнителя
album_release - выпуск на рынок пластинок с указанием даты (YYYY-MM-DD) и оптового поставщика (может быть компанией производителем) 
shop_stock - склад магазина с датой поставки, количеством, оптовой и розничной ценой (trade_price/retail_price)
shop_ticket - чек (фиксация) очередной продажи позиции со склада с датой, ценой и количеством копий пластинки 

// select ----------------------------------------------

1) получить количество музыкальных произведений заданного ансамбля;

    SELECT COUNT(*) as count FROM band b, singles s
    WHERE b.b_id = s.author
    AND band_name = 'Perfect Me';

2) выводить название всех компакт-дисков заданного ансамбля 

    SELECT am.album_name FROM band b, album a, album_matrix am 
    WHERE 1=1 
    AND b.b_id = a.b_id
    AND a.am_id = am.am_id
    AND band_name = 'Hans Zimmer'
    GROUP BY am.am_id;

3.1) самые продаваемые альбомы по убыванию

    SELECT am.album_name, SUM(st.sale_count) as 'total sold' 
    FROM album_matrix am, album_release ar, shop_stock ss, shop_ticket st   
    WHERE 1=1
    AND am.am_id = ar.am_id 
    AND ar.ar_id = ss.ar_id
    AND ss.ss_id = st.ss_id
    AND STRFTIME('%Y',st.sale_date) = '2020' -- STRFTIME('%Y','now') -- текущий год или любой другой, например 2020
    GROUP BY am.am_id 
    ORDER BY 'total_sold'
    
3.2) самые прибыльные альбомы

    SELECT album_name, all_profit from (  
    SELECT am.am_id, am.album_name, ss.date_load, ss.ss_id, st.unit_price, st.sale_count 
        ,SUM((st.unit_price * st.sale_count)) as all_profit  
        FROM album_matrix am, album_release ar, shop_stock ss, shop_ticket st   
        WHERE 1=1
        AND am.am_id = ar.am_id 
        AND ar.ar_id = ss.ar_id
        AND ss.ss_id = st.ss_id
        AND STRFTIME('%Y',st.sale_date) = '2020' -- STRFTIME('%Y','now') -- текущий год или любой другой, например 2020
        GROUP BY am.am_id
    )
    ORDER BY all_profit DESC; 
    
4)
INSERT INTO album(am_id, s_id, b_id) VALUES(0, 0, 0);

5)
INSERT INTO band (band_name, bt_id) VALUES('', 0);

    

// TASK ------------------------------------------------

База данных музыкального магазина. 

Таблицы базы данных
содержат информацию о музыкантах, музыкальных произведе-
ниях и обстоятельствах их исполнения. Нескольких музыкантов,
образующих единый коллектив, называются ансамблем. Это мо-
жет быть классический оркестр, джазовая группа, квартет, квин-
тет и т.д. К музыкантам причисляют исполнителей (играющих
на одном или нескольких инструментах), композиторов, дири-
жеров и руководителей ансамблей.

Кроме того, в базе данных хранится информация о пластинках,
которыми магазин торгует. Каждая пластинка, а точнее, ее на-
клейка, идентифицируется отдельным номером, так что всем ко-
пиям, отпечатанным с матрицы в разное время, присвоены оди-
наковые номера. На пластинке может быть записано несколько
исполнений одного и того же произведения ó для каждого из
них в базе заведена отдельная запись. Когда выходит новая пла-
стинка, регистрируется название выпустившей ее компании (на-
пример, ЕМI), а также адрес оптовой фирмы, у которой магазин
может приобрести эту пластинку. Не исключено, что компанияñ
производитель занимается и оптовой продажей своих пласти-
нок.
Магазин фиксирует текущие оптовые и розничные цены на
каждую пластинку, дату ее выпуска, количество экземпляров,
проданных за прошлый год и в нынешнем году, а также число
еще не распроданных пластинок.

Помимо SQL запросов для создания таблиц базы данных, раз-
работать пакет-интерфейс, позволяющий:
1) получить количество музыкальных произведений заданного ансамбля;
2) выводить название всех компакт-дисков заданного ансамбля;
3) показать лидеров продаж текущего года, то есть названия
компакт-дисков, которые чаще всего покупали в текущем
году;

4) предусмотреть изменения данных о компакт-дисках и ввод
новых данных;
5) предусмотреть ввод новых данных об ансамблях.

Предусмотреть разработку триггеров, обеспечивающих каскад-
ные изменения в связанных таблицах.

СУБД - postgresql, mysql или sqlite.
Язык реализации - С++ или python.
